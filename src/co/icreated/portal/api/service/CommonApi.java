/**
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech) (6.2.1).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
package co.icreated.portal.api.service;

import co.icreated.portal.api.model.PortalErrorDto;
import co.icreated.portal.api.model.ValueLabelDto;
import io.swagger.v3.oas.annotations.Operation;
import io.swagger.v3.oas.annotations.Parameter;
import io.swagger.v3.oas.annotations.Parameters;
import io.swagger.v3.oas.annotations.media.Content;
import io.swagger.v3.oas.annotations.media.Schema;
import io.swagger.v3.oas.annotations.responses.ApiResponse;
import io.swagger.v3.oas.annotations.security.SecurityRequirement;
import io.swagger.v3.oas.annotations.tags.Tag;
import org.springframework.http.HttpStatus;
import org.springframework.http.MediaType;
import org.springframework.http.ResponseEntity;
import org.springframework.validation.annotation.Validated;
import org.springframework.web.bind.annotation.*;
import org.springframework.web.context.request.NativeWebRequest;
import org.springframework.web.multipart.MultipartFile;

import javax.validation.Valid;
import javax.validation.constraints.*;
import java.util.List;
import java.util.Map;
import java.util.Optional;
import javax.annotation.Generated;

@Generated(value = "org.openapitools.codegen.languages.SpringCodegen")
@Validated
@Tag(name = "Common", description = "Common operations")
public interface CommonApi {

    /**
     * GET /common/reference/creditcardtypes : Get credit card types
     * Get credit card types
     *
     * @return OK (status code 200)
     */
    @Operation(
        operationId = "getCreditCardTypes",
        summary = "Get credit card types",
        tags = { "Common" },
        responses = {
            @ApiResponse(responseCode = "200", description = "OK", content = {
                @Content(mediaType = "application/json", schema = @Schema(implementation = ValueLabelDto.class))
            })
        },
        security = {
            @SecurityRequirement(name = "bearerAuth")
        }
    )
    @RequestMapping(
        method = RequestMethod.GET,
        value = "/common/reference/creditcardtypes",
        produces = { "application/json" }
    )
    ResponseEntity<List<ValueLabelDto>> getCreditCardTypes(
        
    );


    /**
     * GET /common/reference/docstatus/{language}/{value} : Get document status
     * Get document status
     *
     * @param language Language (required)
     * @param value Value (required)
     * @return OK (status code 200)
     *         or Unexpected error (status code 200)
     */
    @Operation(
        operationId = "getDocStatus",
        summary = "Get document status",
        tags = { "Common" },
        responses = {
            @ApiResponse(responseCode = "200", description = "OK", content = {
                @Content(mediaType = "application/json", schema = @Schema(implementation = String.class))
            }),
            @ApiResponse(responseCode = "200", description = "Unexpected error", content = {
                @Content(mediaType = "application/json", schema = @Schema(implementation = PortalErrorDto.class))
            })
        },
        security = {
            @SecurityRequirement(name = "bearerAuth")
        }
    )
    @RequestMapping(
        method = RequestMethod.GET,
        value = "/common/reference/docstatus/{language}/{value}",
        produces = { "application/json" }
    )
    ResponseEntity<String> getDocStatus(
        @Parameter(name = "language", description = "Language", required = true) @PathVariable("language") String language,
        @Parameter(name = "value", description = "Value", required = true) @PathVariable("value") String value
    );


    /**
     * GET /common/reference/tendertype/{language}/{value} : Get tender type
     * Get tender type
     *
     * @param language Language (required)
     * @param value Value (required)
     * @return OK (status code 200)
     *         or Unexpected error (status code 200)
     */
    @Operation(
        operationId = "getTenderType",
        summary = "Get tender type",
        tags = { "Common" },
        responses = {
            @ApiResponse(responseCode = "200", description = "OK", content = {
                @Content(mediaType = "application/json", schema = @Schema(implementation = String.class))
            }),
            @ApiResponse(responseCode = "200", description = "Unexpected error", content = {
                @Content(mediaType = "application/json", schema = @Schema(implementation = PortalErrorDto.class))
            })
        },
        security = {
            @SecurityRequirement(name = "bearerAuth")
        }
    )
    @RequestMapping(
        method = RequestMethod.GET,
        value = "/common/reference/tendertype/{language}/{value}",
        produces = { "application/json" }
    )
    ResponseEntity<String> getTenderType(
        @Parameter(name = "language", description = "Language", required = true) @PathVariable("language") String language,
        @Parameter(name = "value", description = "Value", required = true) @PathVariable("value") String value
    );

}

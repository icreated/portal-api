/**
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech) (6.2.1).
 * https://openapi-generator.tech Do not edit the class manually.
 */
package co.icreated.portal.api;

import java.util.List;

import javax.annotation.Generated;
import javax.validation.Valid;
import javax.validation.constraints.*;

import org.springframework.http.ResponseEntity;
import org.springframework.validation.annotation.Validated;
import org.springframework.web.bind.annotation.*;

import co.icreated.portal.model.CreditCardDto;
import co.icreated.portal.model.PaymentDto;
import io.swagger.v3.oas.annotations.Operation;
import io.swagger.v3.oas.annotations.Parameter;
import io.swagger.v3.oas.annotations.media.Content;
import io.swagger.v3.oas.annotations.media.Schema;
import io.swagger.v3.oas.annotations.responses.ApiResponse;
import io.swagger.v3.oas.annotations.tags.Tag;

@Generated(value = "org.openapitools.codegen.languages.SpringCodegen")
@Validated
@Tag(name = "Payments", description = "Operations about payments")
public interface PaymentsApi {

  /**
   * POST /payments : Create payment Create payment
   *
   * @param creditCardDto Payment object (required)
   * @return successful operation (status code 200) or Bad Request (status code 400) or Unauthorized
   *         (status code 401) or Forbidden (status code 403) or Internal Server Error (status code
   *         500)
   */
  @Operation(operationId = "createPayment", summary = "Create payment", tags = {"payments"},
      responses = {@ApiResponse(responseCode = "200", description = "successful operation"),
          @ApiResponse(responseCode = "400", description = "Bad Request"),
          @ApiResponse(responseCode = "401", description = "Unauthorized"),
          @ApiResponse(responseCode = "403", description = "Forbidden"),
          @ApiResponse(responseCode = "500", description = "Internal Server Error")})
  @RequestMapping(method = RequestMethod.POST, value = "/payments", consumes = {"application/json"})
  ResponseEntity<Void> createPayment(
      @Parameter(name = "CreditCardDto", description = "Payment object", required = true) @Valid
      @RequestBody CreditCardDto creditCardDto);


  /**
   * GET /payments : Get payments Get user payments
   *
   * @return OK (status code 200)
   */
  @Operation(operationId = "getPayments", summary = "Get payments", tags = {"payments"},
      responses = {@ApiResponse(responseCode = "200", description = "OK",
          content = {@Content(mediaType = "application/json",
              schema = @Schema(implementation = PaymentDto.class))})})
  @RequestMapping(method = RequestMethod.GET, value = "/payments", produces = {"application/json"})
  ResponseEntity<List<PaymentDto>> getPayments(

  );

}

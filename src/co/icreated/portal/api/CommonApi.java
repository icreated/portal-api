/**
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech) (6.2.1).
 * https://openapi-generator.tech Do not edit the class manually.
 */
package co.icreated.portal.api;

import java.util.List;

import javax.annotation.Generated;
import javax.validation.constraints.*;

import org.springframework.http.ResponseEntity;
import org.springframework.validation.annotation.Validated;
import org.springframework.web.bind.annotation.*;

import co.icreated.portal.model.ValueLabelDto;
import io.swagger.v3.oas.annotations.Operation;
import io.swagger.v3.oas.annotations.Parameter;
import io.swagger.v3.oas.annotations.media.Content;
import io.swagger.v3.oas.annotations.media.Schema;
import io.swagger.v3.oas.annotations.responses.ApiResponse;
import io.swagger.v3.oas.annotations.tags.Tag;

@Generated(value = "org.openapitools.codegen.languages.SpringCodegen")
@Validated
@Tag(name = "Common", description = "Common operations")
public interface CommonApi {

  /**
   * GET /common/reference/creditcardtypes : Get credit card types Get credit card types
   *
   * @return OK (status code 200)
   */
  @Operation(operationId = "getCreditCardTypes", summary = "Get credit card types",
      tags = {"common"},
      responses = {@ApiResponse(responseCode = "200", description = "OK",
          content = {@Content(mediaType = "application/json",
              schema = @Schema(implementation = ValueLabelDto.class))})})
  @RequestMapping(method = RequestMethod.GET, value = "/common/reference/creditcardtypes",
      produces = {"application/json"})
  ResponseEntity<List<ValueLabelDto>> getCreditCardTypes(

  );


  /**
   * GET /common/reference/docstatus/{language}/{value} : Get document status Get document status
   *
   * @param language Language (required)
   * @param value Value (required)
   * @return OK (status code 200) or Not Found (status code 404)
   */
  @Operation(operationId = "getDocStatus", summary = "Get document status", tags = {"common"},
      responses = {
          @ApiResponse(responseCode = "200", description = "OK",
              content = {@Content(mediaType = "application/json",
                  schema = @Schema(implementation = String.class))}),
          @ApiResponse(responseCode = "404", description = "Not Found")})
  @RequestMapping(method = RequestMethod.GET,
      value = "/common/reference/docstatus/{language}/{value}", produces = {"application/json"})
  ResponseEntity<String> getDocStatus(
      @Parameter(name = "language", description = "Language", required = true)
      @PathVariable("language") String language,
      @Parameter(name = "value", description = "Value", required = true)
      @PathVariable("value") String value);


  /**
   * GET /common/reference/tendertype/{language}/{value} : Get tender type Get tender type
   *
   * @param language Language (required)
   * @param value Value (required)
   * @return OK (status code 200) or Not Found (status code 404)
   */
  @Operation(operationId = "getTenderType", summary = "Get tender type", tags = {"common"},
      responses = {
          @ApiResponse(responseCode = "200", description = "OK",
              content = {@Content(mediaType = "application/json",
                  schema = @Schema(implementation = String.class))}),
          @ApiResponse(responseCode = "404", description = "Not Found")})
  @RequestMapping(method = RequestMethod.GET,
      value = "/common/reference/tendertype/{language}/{value}", produces = {"application/json"})
  ResponseEntity<String> getTenderType(
      @Parameter(name = "language", description = "Language", required = true)
      @PathVariable("language") String language,
      @Parameter(name = "value", description = "Value", required = true)
      @PathVariable("value") String value);

}
